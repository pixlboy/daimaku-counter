{"version":3,"sources":["firebase/config.js","firebase/connect.js","App.js","reportWebVitals.js","Counter.js","NavBar.js","index.js","Thanks.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","firestore","storage","enablePersistence","catch","err","code","console","log","App","history","useHistory","useState","name","setName","time","setTime","password","setPassword","members","setMembers","useEffect","localMembers","collection","get","then","querySnapshot","forEach","doc","push","data","error","isDisabled","FormControl","variant","className","Select","native","value","onChange","event","target","map","item","i","TextField","type","placeholder","Button","onClick","where","id","set","count","Number","color","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","date","Date","NavBar","AppBar","position","Toolbar","Typography","to","ReactDOM","render","StrictMode","path","component","totalTime","setTotalTime","Math","floor","document","getElementById"],"mappings":"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","file":"static/js/main.4eaededa.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';     // for storage\r\nimport 'firebase/firestore';   // for cloud firestore\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import firebase from './config';\r\n\r\nconst firestore = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\n// enable offline data\r\nfirestore.enablePersistence()\r\n.catch((err) => {\r\n  if (err.code === 'failed-precondition') {\r\n    // probably multible tabs open at once\r\n    console.log('persistance failed');\r\n  } else if (err.code === 'unimplemented') {\r\n    // lack of browser support for the feature\r\n    console.log('persistance not available');\r\n  }\r\n});\r\n\r\nexport {firestore, storage};","import './App.css';\nimport {useState, useEffect} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport {firestore} from './firebase/connect';\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [time, setTime] = useState(0);\n  const [password, setPassword] = useState('');\n  const [members, setMembers] = useState([]);\n\n  useEffect(() => {\n    let localMembers = [];\n    const collection = firestore.collection('members').get();\n    collection.then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        localMembers.push(doc.data())\n      });\n      setMembers(localMembers);\n    })\n    .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n    });\n  }, [])\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleInput = (event) => {\n    setTime(event.target.value);\n  };\n\n  const handlePassword = (event) => {\n    setPassword(event.target.value);\n  }\n  \n  const handleSubmit = () => {\n    const collection = firestore.collection('members').where('name', '==', name);\n    collection.get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          firestore.collection('members').doc(doc.id).set({\n            name: doc.data().name,\n            count: Number(time) + doc.data().count\n          })\n          .then(() => {\n            setPassword('');\n            setTime(0);\n            setName('');\n            history.push(\"/thanks\");\n          })\n          .catch((error) => {\n            console.log(\"Error setting documents: \", error);\n          });\n      })\n    })\n    .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n    });\n  }\n\n  let isDisabled = !name || !time || (password !== process.env.REACT_APP_PASS_WORD);\n\n  return (\n        <>\n        <div>\n            <p>I am</p>\n            <div><FormControl variant=\"outlined\" className=\"white-font\">\n              <Select\n                native\n                value={name}\n                onChange={handleChange}\n                >\n                <option value=\"\"></option>\n                {members.map((item, i) => {\n                  return <option key={i} value={item.name}>{item.name}</option>\n                })}\n              </Select>\n            </FormControl>\n            </div>\n            <p>and I want to contribute</p>\n            <TextField variant=\"outlined\" type=\"number\" value={time} onChange={handleInput} placeholder=\"Count in minutes\" className=\"time-input\" />\n            <p>minutes towards March 16th Campaign.</p>\n        </div>\n        <div className=\"footer\">\n        <TextField variant=\"outlined\" type=\"password\" value={password} onChange={handlePassword} placeholder=\"Password\" className=\"custom-input\" />\n        <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\" disabled={isDisabled}>Contribute</Button>\n        </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nexport default function Counter(){\r\n  return(<Countdown date={new Date('2021-03-16')} />)\r\n};","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Counter from './Counter';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\nfunction NavBar() {\r\n  \r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n            <Toolbar variant=\"dense\">\r\n            <Typography variant=\"subtitle2\" color=\"inherit\">\r\n                <Link to=\"/\">Munneshwara - Daimaku Count</Link>\r\n            </Typography>\r\n            <div className=\"counter\"><Counter></Counter></div>\r\n            </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Thanks from './Thanks';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport NavBar from './NavBar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <Router>\n      <NavBar></NavBar>\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/thanks\" component={Thanks}></Route>\n          <Route path=\"/\" component={App}></Route>         \n        </Switch>\n      </div>\n      </Router>\n    </>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport {firestore} from './firebase/connect';\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function Thanks(){\r\n    const [totalTime, setTotalTime] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let time = 0;\r\n        const collection = firestore.collection('members').get();\r\n        collection.then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                time = doc.data().count + time;\r\n            });\r\n            setTotalTime(Math.floor(time/60));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <h2>Thank You !!</h2>\r\n            <h4>Total district contribution : {totalTime} Hours</h4>\r\n        </>\r\n    )\r\n};"],"sourceRoot":""}